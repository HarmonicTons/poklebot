import { isValidHardModeGuess, playGuess } from "./utils";

describe("wordle", () => {
  describe("playGuess", () => {
    it("should return 游릴游릴游릴游릴游릴", () => {
      const pattern = playGuess({ answer: "hello", guess: "hello" });
      expect(pattern).toEqual(["游릴", "游릴", "游릴", "游릴", "游릴"]);
    });

    it("should return 拘럺잺拘럺잺拘럺잺拘럺잺拘럺잺", () => {
      const pattern = playGuess({ answer: "fuzzy", guess: "spate" });
      expect(pattern).toEqual(["拘럺잺", "拘럺잺", "拘럺잺", "拘럺잺", "拘럺잺"]);
    });

    it("should return 游릴游릴游릴拘럺잺游릴", () => {
      const pattern = playGuess({ answer: "abate", guess: "abase" });
      expect(pattern).toEqual(["游릴", "游릴", "游릴", "拘럺잺", "游릴"]);
    });

    it("should return 游릴游릴拘럺잺游릳游릳", () => {
      const pattern = playGuess({ answer: "abled", guess: "abode" });
      expect(pattern).toEqual(["游릴", "游릴", "拘럺잺", "游릳", "游릳"]);
    });

    it("should return 游릴游릴拘럺잺游릳拘럺잺", () => {
      const pattern = playGuess({ answer: "abate", guess: "abbey" });
      expect(pattern).toEqual(["游릴", "游릴", "拘럺잺", "游릳", "拘럺잺"]);
    });

    it("should return 拘럺잺游릴游릳拘럺잺游릳", () => {
      const pattern = playGuess({ answer: "lemon", guess: "hello" });
      expect(pattern).toEqual(["拘럺잺", "游릴", "游릳", "拘럺잺", "游릳"]);
    });
  });

  describe("isValidHardModeGuess", () => {
    it("should return true", () => {
      const isValid = isValidHardModeGuess({
        guess: "abase",
        previousGuess: "abate",
        previousGuessPattern: ["游릴", "游릴", "游릴", "拘럺잺", "游릴"],
      });
      expect(isValid).toBe(true);
    });

    it("should return false", () => {
      const isValid = isValidHardModeGuess({
        guess: "abbey",
        previousGuess: "abate",
        previousGuessPattern: ["游릴", "游릴", "拘럺잺", "游릳", "拘럺잺"],
      });
      expect(isValid).toBe(false);
    });

    it("should return true", () => {
      const isValid = isValidHardModeGuess({
        guess: "aback",
        previousGuess: "abate",
        previousGuessPattern: ["游릴", "游릴", "游릴", "拘럺잺", "拘럺잺"],
      });
      expect(isValid).toBe(true);
    });
  });
});
